// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct C_EnterGame : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static C_EnterGame GetRootAsC_EnterGame(ByteBuffer _bb) { return GetRootAsC_EnterGame(_bb, new C_EnterGame()); }
  public static C_EnterGame GetRootAsC_EnterGame(ByteBuffer _bb, C_EnterGame obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public C_EnterGame __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte MapId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<C_EnterGame> CreateC_EnterGame(FlatBufferBuilder builder,
      byte map_id = 0) {
    builder.StartTable(1);
    C_EnterGame.AddMapId(builder, map_id);
    return C_EnterGame.EndC_EnterGame(builder);
  }

  public static void StartC_EnterGame(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddMapId(FlatBufferBuilder builder, byte mapId) { builder.AddByte(0, mapId, 0); }
  public static Offset<C_EnterGame> EndC_EnterGame(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<C_EnterGame>(o);
  }
}


static public class C_EnterGameVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*MapId*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
