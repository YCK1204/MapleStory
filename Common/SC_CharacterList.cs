// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SC_CharacterList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SC_CharacterList GetRootAsSC_CharacterList(ByteBuffer _bb) { return GetRootAsSC_CharacterList(_bb, new SC_CharacterList()); }
  public static SC_CharacterList GetRootAsSC_CharacterList(ByteBuffer _bb, SC_CharacterList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SC_CharacterList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CharacterListError Ok { get { int o = __p.__offset(4); return o != 0 ? (CharacterListError)__p.bb.Get(o + __p.bb_pos) : CharacterListError.SUCCESS; } }
  public CharacterInfo? List(int j) { int o = __p.__offset(6); return o != 0 ? (CharacterInfo?)(new CharacterInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<SC_CharacterList> CreateSC_CharacterList(FlatBufferBuilder builder,
      CharacterListError ok = CharacterListError.SUCCESS,
      VectorOffset listOffset = default(VectorOffset)) {
    builder.StartTable(2);
    SC_CharacterList.AddList(builder, listOffset);
    SC_CharacterList.AddOk(builder, ok);
    return SC_CharacterList.EndSC_CharacterList(builder);
  }

  public static void StartSC_CharacterList(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddOk(FlatBufferBuilder builder, CharacterListError ok) { builder.AddByte(0, (byte)ok, 0); }
  public static void AddList(FlatBufferBuilder builder, VectorOffset listOffset) { builder.AddOffset(1, listOffset.Value, 0); }
  public static VectorOffset CreateListVector(FlatBufferBuilder builder, Offset<CharacterInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateListVectorBlock(FlatBufferBuilder builder, Offset<CharacterInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<CharacterInfo>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<CharacterInfo>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<SC_CharacterList> EndSC_CharacterList(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SC_CharacterList>(o);
  }
}


static public class SC_CharacterListVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Ok*/, 1 /*CharacterListError*/, 1, false)
      && verifier.VerifyVectorOfTables(tablePos, 6 /*List*/, CharacterInfoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
