// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct C_EnterChannel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static C_EnterChannel GetRootAsC_EnterChannel(ByteBuffer _bb) { return GetRootAsC_EnterChannel(_bb, new C_EnterChannel()); }
  public static C_EnterChannel GetRootAsC_EnterChannel(ByteBuffer _bb, C_EnterChannel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public C_EnterChannel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte ServerIndex { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public byte ChannelIndex { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<C_EnterChannel> CreateC_EnterChannel(FlatBufferBuilder builder,
      byte server_index = 0,
      byte channel_index = 0) {
    builder.StartTable(2);
    C_EnterChannel.AddChannelIndex(builder, channel_index);
    C_EnterChannel.AddServerIndex(builder, server_index);
    return C_EnterChannel.EndC_EnterChannel(builder);
  }

  public static void StartC_EnterChannel(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddServerIndex(FlatBufferBuilder builder, byte serverIndex) { builder.AddByte(0, serverIndex, 0); }
  public static void AddChannelIndex(FlatBufferBuilder builder, byte channelIndex) { builder.AddByte(1, channelIndex, 0); }
  public static Offset<C_EnterChannel> EndC_EnterChannel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<C_EnterChannel>(o);
  }
}


static public class C_EnterChannelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ServerIndex*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*ChannelIndex*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
