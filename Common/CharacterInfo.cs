// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CharacterInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CharacterInfo GetRootAsCharacterInfo(ByteBuffer _bb) { return GetRootAsCharacterInfo(_bb, new CharacterInfo()); }
  public static CharacterInfo GetRootAsCharacterInfo(ByteBuffer _bb, CharacterInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte CharType { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public ushort Level { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<CharacterInfo> CreateCharacterInfo(FlatBufferBuilder builder,
      byte char_type = 0,
      ushort level = 0,
      StringOffset nameOffset = default(StringOffset)) {
    builder.StartTable(3);
    CharacterInfo.AddName(builder, nameOffset);
    CharacterInfo.AddLevel(builder, level);
    CharacterInfo.AddCharType(builder, char_type);
    return CharacterInfo.EndCharacterInfo(builder);
  }

  public static void StartCharacterInfo(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddCharType(FlatBufferBuilder builder, byte charType) { builder.AddByte(0, charType, 0); }
  public static void AddLevel(FlatBufferBuilder builder, ushort level) { builder.AddUshort(1, level, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static Offset<CharacterInfo> EndCharacterInfo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CharacterInfo>(o);
  }
}


static public class CharacterInfoVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*CharType*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*Level*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
