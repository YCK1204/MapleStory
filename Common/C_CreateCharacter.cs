// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct C_CreateCharacter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static C_CreateCharacter GetRootAsC_CreateCharacter(ByteBuffer _bb) { return GetRootAsC_CreateCharacter(_bb, new C_CreateCharacter()); }
  public static C_CreateCharacter GetRootAsC_CreateCharacter(ByteBuffer _bb, C_CreateCharacter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public C_CreateCharacter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public byte CharType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public CharacterAbility? Ability { get { int o = __p.__offset(8); return o != 0 ? (CharacterAbility?)(new CharacterAbility()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<C_CreateCharacter> CreateC_CreateCharacter(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      byte char_type = 0,
      Offset<CharacterAbility> abilityOffset = default(Offset<CharacterAbility>)) {
    builder.StartTable(3);
    C_CreateCharacter.AddAbility(builder, abilityOffset);
    C_CreateCharacter.AddName(builder, nameOffset);
    C_CreateCharacter.AddCharType(builder, char_type);
    return C_CreateCharacter.EndC_CreateCharacter(builder);
  }

  public static void StartC_CreateCharacter(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddCharType(FlatBufferBuilder builder, byte charType) { builder.AddByte(1, charType, 0); }
  public static void AddAbility(FlatBufferBuilder builder, Offset<CharacterAbility> abilityOffset) { builder.AddOffset(2, abilityOffset.Value, 0); }
  public static Offset<C_CreateCharacter> EndC_CreateCharacter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<C_CreateCharacter>(o);
  }
}


static public class C_CreateCharacterVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Name*/, false)
      && verifier.VerifyField(tablePos, 6 /*CharType*/, 1 /*byte*/, 1, false)
      && verifier.VerifyTable(tablePos, 8 /*Ability*/, CharacterAbilityVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
