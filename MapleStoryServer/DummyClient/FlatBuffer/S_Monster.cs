// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct S_Monster : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static S_Monster GetRootAsS_Monster(ByteBuffer _bb) { return GetRootAsS_Monster(_bb, new S_Monster()); }
  public static S_Monster GetRootAsS_Monster(ByteBuffer _bb, S_Monster obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S_Monster __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public short Damage { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public short Dmg { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }

  public static Offset<S_Monster> CreateS_Monster(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      short damage = 0,
      short dmg = 0) {
    builder.StartTable(3);
    S_Monster.AddName(builder, nameOffset);
    S_Monster.AddDmg(builder, dmg);
    S_Monster.AddDamage(builder, damage);
    return S_Monster.EndS_Monster(builder);
  }

  public static void StartS_Monster(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddDamage(FlatBufferBuilder builder, short damage) { builder.AddShort(1, damage, 0); }
  public static void AddDmg(FlatBufferBuilder builder, short dmg) { builder.AddShort(2, dmg, 0); }
  public static Offset<S_Monster> EndS_Monster(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<S_Monster>(o);
  }
}


static public class S_MonsterVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Name*/, false)
      && verifier.VerifyField(tablePos, 6 /*Damage*/, 2 /*short*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Dmg*/, 2 /*short*/, 2, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
