// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_TANJIRO_H_
#define FLATBUFFERS_GENERATED_TANJIRO_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 25,
             "Non-compatible flatbuffers version included");

enum Tanjiro_Attack : uint8_t {
  Tanjiro_Attack_SwingT2 = 0,
  Tanjiro_Attack_Swing = 1,
  Tanjiro_Attack_SwingT1 = 2,
  Tanjiro_Attack_SwingT3 = 3,
  Tanjiro_Attack_MIN = Tanjiro_Attack_SwingT2,
  Tanjiro_Attack_MAX = Tanjiro_Attack_SwingT3
};

inline const Tanjiro_Attack (&EnumValuesTanjiro_Attack())[4] {
  static const Tanjiro_Attack values[] = {
    Tanjiro_Attack_SwingT2,
    Tanjiro_Attack_Swing,
    Tanjiro_Attack_SwingT1,
    Tanjiro_Attack_SwingT3
  };
  return values;
}

inline const char * const *EnumNamesTanjiro_Attack() {
  static const char * const names[5] = {
    "SwingT2",
    "Swing",
    "SwingT1",
    "SwingT3",
    nullptr
  };
  return names;
}

inline const char *EnumNameTanjiro_Attack(Tanjiro_Attack e) {
  if (::flatbuffers::IsOutRange(e, Tanjiro_Attack_SwingT2, Tanjiro_Attack_SwingT3)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesTanjiro_Attack()[index];
}

#endif  // FLATBUFFERS_GENERATED_TANJIRO_H_
